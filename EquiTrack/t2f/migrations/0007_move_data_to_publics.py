# -*- coding: utf-8 -*-
# Generated by Django 1.9.10 on 2017-01-12 12:49
from __future__ import unicode_literals

import logging

from django.core.exceptions import ObjectDoesNotExist
from django.db import migrations

log = logging.getLogger(__name__)


def copy_models(OLD, NEW, **related_mappings):
    log.info('Moving data from %s to %s', OLD.__name__, NEW.__name__)
    mapping = {}

    for old_instance_id in OLD.objects.all().values_list('id', flat=True):
        values = OLD.objects.filter(id=old_instance_id).values()[0]
        values.pop('id')

        for mapping_key, related_mapping in related_mappings.items():
            new_key = mapping_key.rstrip('_id')
            values[new_key] = related_mapping[values[mapping_key]]
            values.pop(mapping_key)

        try:
            new_instance = NEW.objects.get(**values)
        except ObjectDoesNotExist:
            new_instance = NEW.objects.create(**values)
        mapping[old_instance_id] = new_instance

    return mapping


def get_from_mapping(mapping, field):
    field_id = getattr(field, 'id', None)

    if not field_id:
        return None

    return mapping.get(field_id)


def move_models(apps, schema_editor):
    wbs_mapping = copy_models(apps.get_model('t2f', 'WBS'),
                              apps.get_model('publics', 'WBS'))

    grant_mapping = copy_models(apps.get_model('t2f', 'Grant'),
                                apps.get_model('publics', 'Grant'),
                                wbs_id=wbs_mapping)

    fund_mapping = copy_models(apps.get_model('t2f', 'Fund'),
                               apps.get_model('publics', 'Fund'),
                               grant_id=grant_mapping)

    expense_type_mapping = copy_models(apps.get_model('t2f', 'ExpenseType'),
                                       apps.get_model('publics', 'ExpenseType'))

    currency_mapping = copy_models(apps.get_model('t2f', 'Currency'),
                                   apps.get_model('publics', 'Currency'))

    airline_mapping = copy_models(apps.get_model('t2f', 'AirlineCompany'),
                                  apps.get_model('publics', 'AirlineCompany'))

    dsa_region_mapping = copy_models(apps.get_model('t2f', 'DSARegion'),
                                     apps.get_model('publics', 'DSARegion'))

    Travel = apps.get_model('t2f', 'Travel')
    for travel in Travel.objects.all():
        travel.new_mode_of_travel = [mot.name for mot in travel.mode_of_travel.all()]
        travel.new_currency = get_from_mapping(currency_mapping, travel.currency)
        travel.save()

    IteneraryItem = apps.get_model('t2f', 'IteneraryItem')
    for itinerary_item in IteneraryItem.objects.all():
        itinerary_item.new_mode_of_travel = getattr(itinerary_item.mode_of_travel, 'name', None)
        itinerary_item.new_airlines = [airline_mapping[a.id] for a in itinerary_item.airlines.all()]
        itinerary_item.new_dsa_region = get_from_mapping(dsa_region_mapping, itinerary_item.dsa_region)
        itinerary_item.save()

    Expense = apps.get_model('t2f', 'Expense')
    for expense in Expense.objects.all():
        expense.new_type = get_from_mapping(expense_type_mapping, expense.type)
        expense.new_account_currency = get_from_mapping(currency_mapping, expense.account_currency)
        expense.new_document_currency = get_from_mapping(currency_mapping, expense.document_currency)
        expense.save()

    CostAssignment = apps.get_model('t2f', 'CostAssignment')
    for cost_assignment in CostAssignment.objects.all():
        cost_assignment.new_wbs = get_from_mapping(wbs_mapping, cost_assignment.wbs)
        cost_assignment.new_grant = get_from_mapping(grant_mapping, cost_assignment.grant)
        cost_assignment.new_fund = get_from_mapping(fund_mapping, cost_assignment.fund)
        cost_assignment.save()

    Invoice = apps.get_model('t2f', 'Invoice')
    for invoice in Invoice.objects.all():
        invoice.new_currency = get_from_mapping(currency_mapping, invoice.currency)
        invoice.save()

    InvoiceItem = apps.get_model('t2f', 'InvoiceItem')
    for invoice_item in InvoiceItem.objects.all():
        invoice_item.new_wbs = get_from_mapping(wbs_mapping, invoice_item.wbs)
        invoice_item.new_fund = get_from_mapping(fund_mapping, invoice_item.fund)
        invoice_item.new_grant = get_from_mapping(grant_mapping, invoice_item.grant)
        invoice_item.save()


class Migration(migrations.Migration):

    dependencies = [
        ('t2f', '0006_auto_20170112_1449'),
        ('publics', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(move_models),
    ]
